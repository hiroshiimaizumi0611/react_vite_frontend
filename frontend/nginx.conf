upstream backend {
    server ${BACKEND_HOST}:${BACKEND_PORT};
}

server {
    listen 80;

    root /usr/share/nginx/html;
    index index.html;

    # 入口：基本は SPA なので index.html にフォールバック
    # index.html は毎回再確認（もしくは保存禁止）して切替を確実に
    location = /index.html {
        add_header Cache-Control "no-store, must-revalidate" always; # 厳しめなら no-store でもOK
        try_files $uri =404;
    }

    # ルート直アクセスも index.html 扱い（同じヘッダ）
    location = / {
        add_header Cache-Control "no-store, must-revalidate" always; # 厳しめなら no-store でもOK
        try_files $uri /index.html;
    }

    # 通常のパスも最終的に index.html にフォールバック
    # （/foo や /app/xxx などの直リンク）
    location / {
        add_header Cache-Control "no-store, must-revalidate" always; # 厳しめなら no-store でもOK
        try_files $uri $uri/ /index.html;
    }

    # ハッシュ付きアセットは長寿命 + immutable
    # 例: app.[hash].js / styles.[hash].css など
    location ~* \.(?:js|css|mjs|png|jpg|jpeg|gif|svg|ico|webp|woff2?|ttf|eot)$ {
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        try_files $uri =404;
    }

    # API はそのままバックエンドへ
    location /api/ {
        proxy_pass http://backend;

        # （任意）メンテ時に 503 を返したいなど、将来ここで制御可
        # 例）proxy_intercept_errors on; error_page 503 = /maintenance.html;
    }
}